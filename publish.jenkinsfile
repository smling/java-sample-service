pipeline {
    agent any
    options {
        buildDiscarder logRotator(numToKeepStr: '7')
    }
    stages {
        stage('Initial Settings') {
            steps {
                script {
                    serviceName="sample-service"
                    targetVersion = '0.0.2'
                    properties([
                        parameters([
                            choice(
                                choices: ['JMeter', 'Postman', 'None'],
                                name: 'TEST_TOOL'
                            ),
                            string(
                                name: 'BUILD_VERSION_NUMBER',
                                defaultValue: "${targetVersion}",
                                trim: true
                            ),
                            string(
                                name: 'ECR_VERSION_NUMBER',
                                defaultValue: "${targetVersion}",
                                trim: true
                            ),
                            string(
                                defaultValue: "580",
                                name: 'GITLAB_PROJECT_ID',
                                trim: true
                            )
                        ])
                    ])
                    currentBranch = GIT_BRANCH
                    currentRepositoryPath = sh(returnStdout: true, script: 'git config remote.origin.url').trim()
                    echo "Current repo : ${currentRepositoryPath}"
                    echo "Current branch :  ${currentBranch}"
                    targetEnvironment = "uat"
                    switch(currentBranch) {
                        case "development":
                            targetEnvironment = "uat"
                        break
                        case ["master","main"]:
                            // Change value to production.
                            targetEnvironment = "uat"
                            //targetEnvironment = "prod"
                        break
                    }
                }
            }
        }
    }
}